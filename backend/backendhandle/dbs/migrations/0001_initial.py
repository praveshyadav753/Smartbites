# Generated by Django 5.1 on 2024-11-07 18:21

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('barcode', models.CharField(max_length=50, unique=True)),
                ('category', models.CharField(max_length=100)),
                ('brand', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='product_images/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Nutrition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serving_size', models.CharField(blank=True, max_length=50, null=True)),
                ('servings_per_container', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('calories', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('calories_from_fat', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('total_fat', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('saturated_fat', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('trans_fat', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('polyunsaturated_fat', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('monounsaturated_fat', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('cholesterol', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('sodium', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('potassium', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('total_carbohydrates', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('dietary_fiber', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('sugars', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('added_sugars', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('sugar_alcohol', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('protein', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('vitamin_a', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('vitamin_c', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('calcium', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('iron', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('vitamin_d', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('vitamin_e', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('vitamin_k', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('thiamin', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('riboflavin', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('niacin', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('vitamin_b6', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('folate', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('vitamin_b12', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('biotin', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('pantothenic_acid', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('phosphorus', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('iodine', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('magnesium', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('zinc', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('selenium', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('copper', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('manganese', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('chromium', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('molybdenum', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('chloride', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('rda_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='nutrition', to='dbs.product')),
            ],
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('order', models.PositiveIntegerField()),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ingredients', to='dbs.product')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
    ]
